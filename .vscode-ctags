!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/media/amir/48BA6005BA5FEDC6/2_embedded_Bare_Metal/1avr_MT/My_Drivers/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
BIT	LIB_DRIVERS/BITS_MACROS.h	/^#define BIT(/;"	d
BITS_MACROS_H	LIB_DRIVERS/BITS_MACROS.h	/^#define BITS_MACROS_H$/;"	d
CLEAR_BIT	LIB_DRIVERS/BITS_MACROS.h	/^#define CLEAR_BIT(/;"	d
CLEAR_MASK	LIB_DRIVERS/BITS_MACROS.h	/^#define CLEAR_MASK(/;"	d
FALSE	LIB_DRIVERS/STD_TYPES.h	/^#define FALSE /;"	d
F_CPU	LIB_DRIVERS/STATIC_CONFIG.h	/^#define F_CPU /;"	d
IS_BIT_CLEAR	LIB_DRIVERS/BITS_MACROS.h	/^#define IS_BIT_CLEAR(/;"	d
IS_BIT_SET	LIB_DRIVERS/BITS_MACROS.h	/^#define IS_BIT_SET(/;"	d
LOGIC_HIGH	LIB_DRIVERS/STD_TYPES.h	/^#define LOGIC_HIGH /;"	d
LOGIC_LOW	LIB_DRIVERS/STD_TYPES.h	/^#define LOGIC_LOW /;"	d
NULL_PTR	LIB_DRIVERS/STD_TYPES.h	/^#define NULL_PTR /;"	d
READ_BIT	LIB_DRIVERS/BITS_MACROS.h	/^#define READ_BIT(/;"	d
ROL	LIB_DRIVERS/BITS_MACROS.h	/^#define ROL(/;"	d
ROR	LIB_DRIVERS/BITS_MACROS.h	/^#define ROR(/;"	d
SET_BIT	LIB_DRIVERS/BITS_MACROS.h	/^#define SET_BIT(/;"	d
SET_MASK	LIB_DRIVERS/BITS_MACROS.h	/^#define SET_MASK(/;"	d
STATIC_CONFIG_H	LIB_DRIVERS/STATIC_CONFIG.h	/^#define STATIC_CONFIG_H$/;"	d
STD_TYPES_H_	LIB_DRIVERS/STD_TYPES.h	/^#define STD_TYPES_H_$/;"	d
TEST_AND_CLEAR_BIT	LIB_DRIVERS/BITS_MACROS.h	/^#define TEST_AND_CLEAR_BIT(/;"	d
TEST_AND_SET_BIT	LIB_DRIVERS/BITS_MACROS.h	/^#define TEST_AND_SET_BIT(/;"	d
TOGGLE_BIT	LIB_DRIVERS/BITS_MACROS.h	/^#define TOGGLE_BIT(/;"	d
TOGGLE_MASK	LIB_DRIVERS/BITS_MACROS.h	/^#define TOGGLE_MASK(/;"	d
TRUE	LIB_DRIVERS/STD_TYPES.h	/^#define TRUE /;"	d
WRITE_BIT	LIB_DRIVERS/BITS_MACROS.h	/^#define WRITE_BIT(/;"	d
boolean	LIB_DRIVERS/STD_TYPES.h	/^typedef unsigned char boolean;$/;"	t	typeref:typename:unsigned char
float32	LIB_DRIVERS/STD_TYPES.h	/^typedef  float float32;$/;"	t	typeref:typename:float
float64	LIB_DRIVERS/STD_TYPES.h	/^typedef  double float64;$/;"	t	typeref:typename:double
sint16	LIB_DRIVERS/STD_TYPES.h	/^typedef signed short sint16;$/;"	t	typeref:typename:signed short
sint32	LIB_DRIVERS/STD_TYPES.h	/^typedef signed long sint32;$/;"	t	typeref:typename:signed long
sint64	LIB_DRIVERS/STD_TYPES.h	/^typedef signed long long sint64;$/;"	t	typeref:typename:signed long long
sint8	LIB_DRIVERS/STD_TYPES.h	/^typedef signed char sint8;$/;"	t	typeref:typename:signed char
uint16	LIB_DRIVERS/STD_TYPES.h	/^typedef unsigned short uint16;$/;"	t	typeref:typename:unsigned short
uint32	LIB_DRIVERS/STD_TYPES.h	/^typedef unsigned long uint32;$/;"	t	typeref:typename:unsigned long
uint64	LIB_DRIVERS/STD_TYPES.h	/^typedef unsigned long long uint64;$/;"	t	typeref:typename:unsigned long long
uint8	LIB_DRIVERS/STD_TYPES.h	/^typedef unsigned char uint8;$/;"	t	typeref:typename:unsigned char
